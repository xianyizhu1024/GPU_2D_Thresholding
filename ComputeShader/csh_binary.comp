#version 430 core
layout( local_size_x=16, local_size_y=16 ) in;
layout ( rgba32f, binding = 0 ) uniform  image2D image_intensity_ave;  // intensity  and  ave
layout ( rgba32f, binding = 1 ) uniform  image2D image_binary;
layout ( rgba32f, binding = 2 ) uniform  image2D image_threshold;
uniform int width_pic,height_pic,graylevel;
//shared vec4 threshold[16]= vec4[16](-50);
void main()
{
	
	if ( gl_GlobalInvocationID.x <width_pic && gl_GlobalInvocationID.y< height_pic)
	{
		// load threshold vector, {0 - (graylevel-1),0 - (graylevel-1)}
		vec2 st_h;
		st_h=imageLoad(image_threshold,ivec2(0,0)).yz;
		//st_h= threshold[int(gl_LocalInvocationID.x)].yz;

		// load intensity, mean  {0-1,0-1}
		vec2 st_ia=imageLoad(image_intensity_ave,ivec2(gl_GlobalInvocationID.xy)).xy;
		st_ia = st_ia*(graylevel-1);

		// binarization
		vec4 ret;
		ret =   ( st_ia.x <=st_h.x && st_ia.y<=st_h.y ) ?vec4(0):vec4(1);
		imageStore(image_binary,ivec2(gl_GlobalInvocationID.xy),ret);
	}
	
}


