#version 430 core
//#extension GL_ARB_compute_shader : enable
//#extension GL_ARB_compute_variable_group_size : enable
//#extension GL_ARB_shader_image_load_store : enable



//layout( local_size_variable ) in;

layout( local_size_x=16, local_size_y=16 ) in;

layout ( rgba32f, binding = 0 ) uniform  image2D image_pic;
layout ( r32ui,binding = 1) uniform  uimage2D image_bins;
//layout ( rgba32f, binding = 2 ) uniform  image2D image_out;
layout ( r32ui,binding = 3) uniform  uimage2D image_bins2d;
uniform int width_pic,height_pic;
uniform bool is1d;
uniform int grayscale;
int L; // 灰度级 (grayscale)

// 2017年5月23日13:12:58 add code
// shared uint bins_shared[32][32]; 
void main()
{
	//2017-03-03 14:11:33
	//直方图

	if ( gl_GlobalInvocationID.x <width_pic && gl_GlobalInvocationID.y< height_pic)
	{
	L = grayscale;
	ivec2 p = ivec2(gl_GlobalInvocationID.xy);
	vec4	ccl =imageLoad(image_pic,p);
	//barrier();
	//memoryBarrier();
	int index = int(ccl.x* ( L - 1 ) +0.5);
	int offset  = int(gl_GlobalInvocationID.y) % 4;
	ivec2 pos=ivec2(index*4+offset,0);
	vec4 kkk = vec4(gl_GlobalInvocationID,0);
	
	
	int x,y;
	x = index;
	y= int(ccl.y*( L - 1 )+0.5);
	
	// 2017年5月23日13:12:58 add code
	// method 1 
	//atomicAdd(bins_shared[x % 32][0],1);
	//atomicAdd(bins_shared[y % 32][1],1);
	// method 2
	//atomicAdd(bins_shared[x % 32][y % 32],1);
	
	
	// 2017年5月23日13:09:27  add comment	
	
	if (is1d)
		imageAtomicAdd(image_bins,pos,1);
	else{	
		imageAtomicAdd(image_bins2d,ivec2(x,y),1);
	//	imageAtomicAdd(image_bins2d,ivec2(x,0),1);
	//	imageAtomicAdd(image_bins2d,ivec2(y,1),1);
	}
	
	
	
	//if (ccl.z<1.1)
	//imageStore(image_bins,pos,1)

	//int k1,k2,w,h;
	//float sum =0.0f;
	//for (k1=-1;k1<2;k1++)
	//{
	//	for (k2=-1;k2<2;k2++)
	//	{
	//		w = clamp(k1+int(gl_GlobalInvocationID.x),0, width_pic -1);
	//		h = clamp(k2+int(gl_GlobalInvocationID.y),0, height_pic-1);
	//		sum+= imageLoad(image_pic,ivec2(w,h)).x;
	//	}
	//}
	//y = int(sum/9.0*255);
	//barrier();
	//imageAtomicAdd(image_bins2d,ivec2(x,y),1);
	
	//	barrier();
	//	imageStore(image_out,ivec2(gl_GlobalInvocationID.xy),ccl);
	}


	
	//if (gl_WorkGroupID.y ==0)
	//imageAtomicAdd(image_bins,ivec2(gl_WorkGroupID.xy),gl_WorkGroupID.y);
}


